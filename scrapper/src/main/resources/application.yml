app:
  scheduler:
    enable: true
    interval: 15000
    force-check-delay: 15000
  database-access-type: jdbc
  useQueue: false
  topicName: bot-updates

spring:
  liquibase:
    enabled: false
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

api:
  github:
    defaultUrl: https://api.github.com
    backoffType: CONSTANT
    retryCount: 3
    retryInterval: 1
    statuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT
  stackoverflow:
    defaultUrl: https://api.stackexchange.com/2.3
    backoffType: CONSTANT
    retryCount: 3
    retryInterval: 1
    statuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT
  bot:
    defaultUrl: http://localhost:8090
    backoffType: CONSTANT
    retryCount: 3
    retryInterval: 1
    statuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY, INSUFFICIENT_STORAGE, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT

springdoc:
  swagger-ui:
    path: /swagger-ui

bucket:
  queryCount: 15

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: health,prometheus,info
      path-mapping:
        prometheus: metrics
      base-path: /
  metrics:
    tags:
      application: ${spring.application.name}
